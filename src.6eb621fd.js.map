{"version":3,"sources":["framework/element.js","components/VehiclesSelectTier.js","components/VehiclesSelectType.js","helpers/appLocation.js","data/vehiclesData.js","components/VehiclesTable.js","components/VehiclesOverview.js","components/App.js","framework/render.js","index.js"],"names":["createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","tiers","VehiclesSelectTier","tier","selectedTier","target","updateVehiclesList","map","types","code","VehiclesSelectType","type","selectedType","updateAppLocation","parameter","parameters","getCurrentAppLocation","key","url","URL","location","origin","pathname","searchParams","set","history","pushState","search","API_URL","FIELDS","LANG","vehiclesData","vehiclesList","list","vehicle","values","push","default_profile","hp","speed_forward","gun","dispersion","shells","damage","dataStore","isDataLoading","fetchVehiclesData","then","data","catch","err","finally","renderApp","Promise","resolve","encodeURIComponent","join","fetch","response","ok","Error","statusText","json","responseJSON","VehiclesTable","vehicle_list","length","VehiclesOverview","App","Component","Target","componentFunction","innerHTML","getElementById"],"mappings":"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","file":"src.6eb621fd.js","sourceRoot":"..\\src","sourcesContent":["/**\r\n * Creates DOM Node. Implements jsx-parser's createElement API\r\n * @param {string|Function} tag - HTML tag as string or Component function\r\n * @param {object} props - element properties as parsed by jsx-parser\r\n * @param {Node[]} children - child elements\r\n * @returns {DocumentFragment|Element}\r\n */\r\nexport const createElement = (tag, props, ...children) => {\r\n  if (typeof tag === 'function') {\r\n    /*\r\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\r\n      and regular tags in wrapper functions that expect children as the 2nd param\r\n     */\r\n    return tag({ ...props, children }, children);\r\n  }\r\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\r\n  Object.entries(props || {}).forEach(([name, value]) => {\r\n    if (name.startsWith('on') && name.toLowerCase() in window) {\r\n      element.addEventListener(\r\n        name.toLowerCase().substr(2),\r\n        /** @type {Function} */\r\n        value,\r\n      );\r\n    } else {\r\n      try {\r\n        if (!(element instanceof DocumentFragment)) {\r\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\r\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\r\n          if (['disabled', 'checked', 'selected'].includes(name) && !value) {\r\n            element.removeAttribute(name);\r\n          } else {\r\n            element.setAttribute(name, value);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error('createElement caught', e, 'on', element);\r\n      }\r\n    }\r\n  });\r\n\r\n  children.forEach(child => appendChild(element, child));\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Appends child elements from an unbound array of children, recursively\r\n * @param {Node} parent\r\n * @param {Node|[Node]} child\r\n */\r\nconst appendChild = (parent, child) => {\r\n  if (Array.isArray(child)) {\r\n    child.forEach(subChild => appendChild(parent, subChild));\r\n  } else {\r\n    // Skip null and undefined\r\n    if (child != null) {\r\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Creates Fragment. Implements jsx-parser's createFragment API\r\n * @param {object} props - effectively a placeholder, fragment never has any properties\r\n * @param {Node[]} children - child elements\r\n * @returns {DocumentFragment}\r\n */\r\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../framework/element';\r\n\r\nconst tiers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\nexport function VehiclesSelectTier({ tier: selectedTier }) {\r\n  return (\r\n    <>\r\n      <label for=\"select-tier\">Tier: </label>\r\n      <select\r\n        id=\"select-tier\"\r\n        onchange={({ target }) => window.updateVehiclesList({ tier: target.value })}\r\n      >\r\n        <option value=\"\">---</option>\r\n        {tiers.map(tier => (\r\n          <option value={tier} selected={tier == selectedTier}>\r\n            {tier}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../framework/element';\r\n\r\nconst types = [\r\n  { name: 'Light Tank', code: 'lightTank' },\r\n  { name: 'Medium Tank', code: 'mediumTank' },\r\n  { name: 'Heavy Tank', code: 'heavyTank' },\r\n  { name: 'AT', code: 'AT-SPG' },\r\n];\r\n\r\nexport function VehiclesSelectType({ type: selectedType }) {\r\n  return (\r\n    <>\r\n      <label for=\"select-type\">Type: </label>\r\n      <select\r\n        id=\"select-type\"\r\n        onchange={({ target }) => window.updateVehiclesList({ type: target.value })}\r\n      >\r\n        <option value=\"\">---</option>\r\n        {types.map(type => (\r\n          <option value={type.code} selected={type.code === selectedType}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n","export function updateAppLocation(parameter) {\n  let parameters = getCurrentAppLocation();\n  for (let [key, value] of Object.entries(parameter)) {\n    parameters[key] = value;\n  }\n  if (parameters['view'] == 'list') {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.set('view', 'list');\n    if (parameters['tier']) {\n      url.searchParams.set('tier', parameters['tier']);\n    }\n    if (parameters['type']) {\n      url.searchParams.set('type', parameters['type']);\n    }\n    window.history.pushState({}, '', url);\n  }\n}\n\nexport function getCurrentAppLocation() {\n  let search = new URL(window.location).searchParams;\n  let parameters = {};\n  for (let [key, value] of search.entries()) {\n    parameters[key] = value;\n  }\n  return parameters;\n}\n","import { updateAppLocation, getCurrentAppLocation } from '../helpers/appLocation';\r\n\r\nconst API_URL = 'https://api.wotblitz.ru/wotb/encyclopedia/vehicles/';\r\nconst FIELDS = [\r\n  'type',\r\n  'tier',\r\n  'name',\r\n  'default_profile.hp',\r\n  'default_profile.speed_forward',\r\n  'default_profile.gun.dispersion',\r\n  'default_profile.shells',\r\n];\r\nconst LANG = 'en';\r\n\r\nlet vehiclesData = null;\r\n\r\nexport function vehiclesList({ tier, type }) {\r\n  let list = [];\r\n  if (vehiclesData) {\r\n    for (let vehicle of Object.values(vehiclesData)) {\r\n      if (vehicle.tier == tier && vehicle.type == type) {\r\n        list.push({\r\n          name: vehicle.name,\r\n          default_profile: {\r\n            hp: vehicle.default_profile.hp,\r\n            speed_forward: vehicle.default_profile.speed_forward,\r\n            gun: {\r\n              dispersion: vehicle.default_profile.gun.dispersion,\r\n            },\r\n            shells: {\r\n              damage: vehicle.default_profile.shells[0].damage,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n  } else {\r\n    // In case of visiting page via direct saved link with selected tier and type\r\n    // It is needed to fetch data here\r\n    if (tier && type) {\r\n      window.dataStore.error = null;\r\n      window.dataStore.isDataLoading = true;\r\n      fetchVehiclesData()\r\n        .then(({ error, data }) => {\r\n          window.dataStore.isDataLoading = false;\r\n          if (error) {\r\n            window.dataStore.error = error;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          window.dataStore.error = 'Some error occurred.';\r\n        })\r\n        .finally(window.renderApp);\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function updateVehiclesList(parameter) {\r\n  updateAppLocation(parameter);\r\n  const parameters = getCurrentAppLocation();\r\n  if (parameters.tier && parameters.type) {\r\n    window.dataStore.error = null;\r\n    window.dataStore.isDataLoading = true;\r\n    window.renderApp();\r\n    fetchVehiclesData()\r\n      .then(({ error, data }) => {\r\n        window.dataStore.isDataLoading = false;\r\n        if (error) {\r\n          window.dataStore.error = error;\r\n        }\r\n      })\r\n      .catch(err => {\r\n        window.dataStore.error = 'Some error occurred.';\r\n      })\r\n      .finally(window.renderApp);\r\n  }\r\n}\r\n\r\nfunction fetchVehiclesData() {\r\n  if (vehiclesData) {\r\n    return Promise.resolve({});\r\n  }\r\n  let url =\r\n    API_URL +\r\n    '?' +\r\n    [\r\n      `application_id=${process.env.WOTB_APP_ID}`,\r\n      `fields=${encodeURIComponent(FIELDS.join(','))}`,\r\n      `language=${LANG}`,\r\n    ].join('&');\r\n  return fetch(url)\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(responseJSON => {\r\n      vehiclesData = responseJSON.data;\r\n      return {};\r\n    });\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../framework/element';\r\nimport { vehiclesList } from '../data/vehiclesData';\r\n\r\nexport function VehiclesTable({ tier, type }) {\r\n  let vehicle_list = vehiclesList({ tier, type });\r\n  const { isDataLoading, error } = window.dataStore;\r\n  if (error != null) {\r\n    return <p>{error}</p>;\r\n  }\r\n  if (isDataLoading) {\r\n    return <p>Please wait. Loading data ...</p>;\r\n  }\r\n  if (vehicle_list.length == 0) {\r\n    return <p>Please select Tier and Type</p>;\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Hit points</th>\r\n          <th>Speed</th>\r\n          <th>Damage</th>\r\n          <th>Dispersion</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {vehicle_list.map(vehicle => (\r\n          <tr>\r\n            <td>{vehicle.name}</td>\r\n            <td>{vehicle.default_profile.hp}</td>\r\n            <td>{vehicle.default_profile.speed_forward}</td>\r\n            <td>{vehicle.default_profile.shells.damage}</td>\r\n            <td>{vehicle.default_profile.gun.dispersion}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../framework/element';\r\nimport { VehiclesSelectTier } from './VehiclesSelectTier';\r\nimport { VehiclesSelectType } from './VehiclesSelectType';\r\nimport { VehiclesTable } from './VehiclesTable';\r\n\r\nexport function VehiclesOverview({ tier, type }) {\r\n  return (\r\n    <>\r\n      <VehiclesSelectTier tier={tier} />\r\n      <VehiclesSelectType type={type} />\r\n      <VehiclesTable tier={tier} type={type} />\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { VehiclesOverview } from '../components/VehiclesOverview';\nimport { getCurrentAppLocation } from '../helpers/appLocation';\n\nexport function App() {\n  let parameters = getCurrentAppLocation();\n  if (parameters['view'] === 'compare') {\n    return <></>;\n  }\n  if (parameters['view'] != 'list') {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.set('view', 'list');\n    window.history.pushState({}, '', url);\n  }\n  return <VehiclesOverview {...parameters} />;\n}\n","/** @jsx createElement */\r\n/*** @jsxFrag createFragment */\r\nimport { createElement } from './element';\r\n\r\nlet Component, Target;\r\n\r\n/**\r\n * Renders a component and attaches it to the target DOM element\r\n * @param componentFunction - Component function or class\r\n * @param target - DOM element to attach component to\r\n */\r\nexport function renderApp(componentFunction = null, target = null) {\r\n  // Memorize parameters to enable re-render when `renderApp` gets called without arguments\r\n  if (componentFunction) Component = componentFunction;\r\n  if (target) Target = target;\r\n  // Ensure that the component gets rebuilt\r\n  Target.innerHTML = '';\r\n  Target.appendChild(<Component />);\r\n}\r\n","import { App } from './components/App';\r\nimport { renderApp } from './framework/render';\r\nimport { updateAppLocation } from './helpers/appLocation';\r\nimport { updateVehiclesList } from './data/vehiclesData';\r\n\r\nwindow.renderApp = renderApp;\r\nwindow.updateAppLocation = updateAppLocation;\r\nwindow.updateVehiclesList = updateVehiclesList;\r\nwindow.dataStore = {\r\n  isDataLoading: false,\r\n  error: null,\r\n};\r\n\r\nrenderApp(App, document.getElementById('app-root'));\r\nupdateAppLocation({});\r\n"]}